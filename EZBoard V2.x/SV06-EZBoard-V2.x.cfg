# This file contains common pin mappings for the TH3D EZBoard v2.
# To use this config, check "Enable extra low-level configuration options"
# and compile the firmware for the STM32F405 with 12mhz Crystal,
# 48KiB Bootloader, and USB communication.

# After the firmware in compiled, change directory to out/ and
# execute the following command
# arm-none-eabi-objcopy -O srec klipper.elf firmware.bin

# The "make flash" command does not work on this board. Instead,
# after running "make", and then the arm command above, 
# copy the generated "out/firmware.bin" file to
# an SD card and then restart the board with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f405xx_0000000000000000-if00
restart_method: command

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[stepper_x]
step_pin: PB3
dir_pin: PD2
enable_pin: !PB5
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_max: 225
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
run_current: 0.860
sense_resistor: 0.150
uart_address: 0
driver_SGTHRS: 81
diag_pin: PB4

[stepper_y]
step_pin: PB8
dir_pin: !PC13
enable_pin: !PC12
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 0
position_max: 225
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
run_current: 0.900
sense_resistor: 0.150
uart_address: 1
driver_SGTHRS: 82
diag_pin: PB9

[stepper_z]
step_pin: PA3
dir_pin: PB1
enable_pin: !PC14
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -4
position_max: 261
homing_speed: 4

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
run_current: 1.000
sense_resistor: 0.150
uart_address: 2
diag_pin: PC15

[extruder]
max_extrude_only_distance: 100.0
step_pin: PA15
dir_pin: PB11
enable_pin: !PB2
microsteps: 16
rotation_distance: 4.604688
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
control: pid
pid_kd: 21.762
pid_kp: 1.262
pid_ki: 93.850
min_temp: -50
max_temp: 300

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
run_current: 0.650
sense_resistor: 0.150
uart_address: 3
diag_pin: PB10

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_kp: 68.502
pid_ki: 1.103
pid_kd: 1063.486
min_temp: 0
max_temp: 130

[temperature_fan MCU]
pin: PC7
kick_start_time: 0.500
sensor_type: temperature_mcu
control: watermark
min_temp: -25
max_temp: 85
target_temp: 25

[fan]
pin: PC6

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[probe]
pin: PA2
x_offset: 28
y_offset: -20
#z_offset: 0
samples: 2
samples_tolerance: 0.015
samples_tolerance_retries: 5

[safe_z_home]
home_xy_position: 85,135
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 28, 20
mesh_max: 210, 205
probe_count: 10
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_3, ^EXP1_5
click_pin: ^!EXP1_2

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 999999
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
# EXP1 header
    EXP1_1=PA14, EXP1_3=PC4, EXP1_5=PC5, EXP1_7=PB12, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=<RST>, EXP1_6=PB13, EXP1_8=PB15, EXP1_10=<5V>
